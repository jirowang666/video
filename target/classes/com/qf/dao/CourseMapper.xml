<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.qf.pojo.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="course_title" jdbcType="VARCHAR" property="courseTitle" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="course_desc" jdbcType="VARCHAR" property="courseDesc" />
    <result column="subject_name" jdbcType="VARCHAR" property="subject_name" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qf.pojo.Course">
    <result column="course_desc" jdbcType="VARCHAR" property="courseDesc" />
  </resultMap>


  <resultMap id="courseMap" type="com.qf.pojo.Course">
    <id column="cid" property="id"/>
    <result column="course_title" property="courseTitle"/>
    <result column="course_desc" property="courseDesc"/>
    <result column="subject_id" property="subjectId"/>
    <collection property="videoList" ofType="com.qf.pojo.Video" javaType="list">
      <id column="vid" property="id"/>
      <result column="title" property="title"/>
      <result column="detail" property="detail"/>
      <result column="time" property="time"/>
      <result column="sid" property="speakerId"/>
      <result column="cid" property="courseId"/>
      <result column="video_url" property="videoUrl"/>
      <result column="image_url" property="imageUrl"/>
      <result column="play_num" property="playNum"/>

      <association property="speaker" javaType="com.qf.pojo.Speaker">
        <id column="sid" property="id"/>
        <result column="speaker_name" property="speakerName"/>
        <result column="speaker_desc" property="speakerDesc"/>
        <result column="speaker_job" property="speakerJob"/>
        <result column="head_img_url" property="headImgUrl"/>
      </association>
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, course_title, subject_id
  </sql>
  <sql id="Blob_Column_List">
    course_desc
  </sql>


  <select id="findCourseById" parameterType="int" resultMap="courseMap">
 SELECT
        course.id AS cid,
        course.course_title,
        course.course_desc,
        course.subject_id,
        video.id AS vid,
        video.title,
        video.detail,
        video.time,
        video.video_url,
        video.image_url,
        video.play_num,
        speaker.id AS sid,
        speaker.speaker_name,
        speaker.speaker_desc,
        speaker.speaker_job,
        speaker.head_img_url
        FROM
        course
        LEFT JOIN video ON video.course_id = course.id
        LEFT JOIN speaker ON speaker.id = video.speaker_id
        WHERE
        course.id = #{id}
  </select>
  <select id="selectByExampleWithBLOBs" parameterType="com.qf.pojo.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>

  </select>

  <select id="findCourses" resultType="map">
      select c.id,c.course_title,course_desc,subject_id,subject_name
      from course c,subject s where c.subject_id=s.id
    </select>

  <delete id="deleteByIds" parameterType="map">
    delete from course
    <where>
      id in
      <foreach item="id" collection="array" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </where>
  </delete>

  <update id="updateCourse" parameterType="com.qf.pojo.Course">
      update course set course_title=#{courseTitle},course_desc=#{courseDesc},subject_id=#{subjectId}
      where id =#{id}
    </update>

  <select id="selectByExample" parameterType="com.qf.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.Course">
    insert into course (id, course_title, subject_id, 
      course_desc)
    values (#{id,jdbcType=INTEGER}, #{courseTitle,jdbcType=VARCHAR}, #{subjectId,jdbcType=INTEGER}, 
      #{courseDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="courseTitle != null">
        course_title,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="courseDesc != null">
        course_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseTitle != null">
        #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="courseDesc != null">
        #{courseDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.courseTitle != null">
        course_title = #{record.courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.courseDesc != null">
        course_desc = #{record.courseDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      course_title = #{record.courseTitle,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      course_desc = #{record.courseDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      course_title = #{record.courseTitle,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.Course">
    update course
    <set>
      <if test="courseTitle != null">
        course_title = #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="courseDesc != null">
        course_desc = #{courseDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qf.pojo.Course">
    update course
    set course_title = #{courseTitle,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER},
      course_desc = #{courseDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.Course">
    update course
    set course_title = #{courseTitle,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>