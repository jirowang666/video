<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.SubjectMapper">
  <resultMap id="BaseResultMap" type="com.qf.pojo.Subject">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
  </resultMap>

    <resultMap id="subjectMap" type="com.qf.pojo.Subject">
        <id column="sid" property="id"/>
        <result column="subject_name" property="subjectName"/>
        <collection property="courseList" ofType="com.qf.pojo.Course" javaType="list">
            <id column="cid" property="id"/>
            <result column="course_title" property="courseTitle"/>
            <result column="course_desc" property="courseDesc"/>
            <result column="subject_id" property="subjectId"/>
        </collection>
            <collection property="videoList" ofType="com.qf.pojo.Video" javaType="list">
                <id column="vid" property="id"/>
                <result column="title" property="title"/>
                <result column="detail" property="detail"/>
                <result column="time" property="time"/>
                <result column="speaker_id" property="speakerId"/>
                <result column="course_id" property="courseId"/>
                <result column="video_url" property="videoUrl"/>
                <result column="image_url" property="imageUrl"/>
                <result column="play_num" property="playNum"/>
            </collection>
    </resultMap>

    <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subject_name
  </sql>
  <select id="selectByExample" parameterType="com.qf.pojo.SubjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subject
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subject
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.SubjectExample">
    delete from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.Subject">
    insert into subject (id, subject_name)
    values (#{id,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.Subject">
    insert into subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subjectName != null">
        subject_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.SubjectExample" resultType="java.lang.Long">
    select count(*) from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <select id="findSubjectById" parameterType="int" resultMap="subjectMap">
    select s.id as sid,s.subject_name,c.id as cid,c.course_title,c.course_desc,
        v.id as vid,v.title,v.title,v.detail,v.time,v.speaker_id,v.video_url,v.image_url,v.play_num
        from video v
        inner join course c
        on c.id=v.course_id
        inner join subject s
        on s.id=c.subject_id
        where s.id=#{id}
    </select>

  <update id="updateByExampleSelective" parameterType="map">
    update subject
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subjectName != null">
        subject_name = #{record.subjectName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subject
    set id = #{record.id,jdbcType=INTEGER},
      subject_name = #{record.subjectName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.Subject">
    update subject
    <set>
      <if test="subjectName != null">
        subject_name = #{subjectName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.Subject">
    update subject
    set subject_name = #{subjectName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>